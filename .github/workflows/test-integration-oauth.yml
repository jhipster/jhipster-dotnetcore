name: Test Integration OAUTH

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  applications:
    name: ${{ matrix.app-type }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    timeout-minutes: 40
    defaults:
      run:
        working-directory: ${{ github.workspace }}/app
    strategy:
      fail-fast: false
      matrix:
        node_version: [18.17.1]
        os: [ubuntu-22.04]
        app-type:
          - oauth-with-angular-app
          - oauth-with-angular-cqrs-app
          - oauth-with-mssql-app
          - oauth-with-mysql-app
          - oauth-with-mongo-app
          - oauth-with-mongo-cqrs-app
          - oauth-with-oracle-app
          - oauth-with-postgres-app
          - oauth-with-react-app
          - oauth-with-vue-app
        include:
          - app-type: oauth-with-angular-app
            arg: 'import-jdl'
            extra-args: '--with-entities'
          - app-type: oauth-with-angular-cqrs-app
            arg: 'import-jdl'
            extra-args: '--with-entities'
          - app-type: oauth-with-mssql-app
            arg: 'no'
          - app-type: oauth-with-mysql-app
            arg: 'no'
          - app-type: oauth-with-mongo-app
            arg: 'no'
          - app-type: oauth-with-mongo-cqrs-app
            arg: 'no'
          - app-type: oauth-with-oracle-app
            arg: 'no'
          - app-type: oauth-with-postgres-app
            arg: 'no'
          - app-type: oauth-with-react-app
            arg: 'import-jdl'
            extra-args: '--with-entities'
          - app-type: oauth-with-vue-app
            arg: 'import-jdl'
            extra-args: '--with-entities'
    env:
      JHI_APP: ${{ matrix.app-type }}
      JHI_ARG: ${{ matrix.arg }}

    steps:
      - uses: actions/checkout@v4
        with:
          path: jhipster-dotnetcore
          fetch-depth: 2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Create app dir
        working-directory: ${{ github.workspace }}
        run: mkdir app
      - name: 'install required npm version'
        run: npm install -g npm@$(node -e "console.log(require('./generators/generator-dotnetcore-constants.cjs').NPM_VERSION);")
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: git history
        run: git --no-pager log -n 10 --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%an>%Creset' --abbrev-commit
        working-directory: ${{ github.workspace }}/jhipster-dotnetcore
      - name: PREPARE jhipster env
        working-directory: ${{ github.workspace }}/jhipster-dotnetcore
        run: npm ci && npm link
      - name: 'GENERATE JHipster.NET app'
        run: jhipster-dotnetcore generate-sample ${{ matrix.app-type }} --skip-install --skip-checks --no-insight --with-entities
      - name: 'INSTALL AND BUILD DEPENDENCIES of generated app'
        run: dotnet build
        env:
          NODE_ENV: development
          APP_VERSION: 1.0
      - name: 'GENERATE JHipster.NET entities'
        run: ../jhipster-dotnetcore/test-integration/scripts/04-generate-entities-sample.sh $JHI_APP $JHI_ARG
      - name: 'RUN CLIENT UNIT TESTS of generated app'
        run: npm test
      - name: 'RUN SERVER UNIT TESTS of generated app'
        run: ../jhipster-dotnetcore/test-integration/scripts/06-run-generated-server-tests-of-sample.sh $JHI_APP
      - name: 'VERIFY FORMAT'
        run: ../jhipster-dotnetcore/test-integration/scripts/09-verify-format.sh $JHI_APP
      - name: Dump docker logs
        if: always()
        uses: jwalton/gh-docker-logs@v2
