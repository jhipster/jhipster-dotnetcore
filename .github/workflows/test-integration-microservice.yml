name: Test Integration JWT
on: [push, pull_request]
jobs:
    applications:
        name: ${{ matrix.app-type }}
        runs-on: ${{ matrix.os }}
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
        timeout-minutes: 40
        strategy:
            fail-fast: false
            matrix:
                node_version: [14.16.0]
                os: [ubuntu-latest]
                app-type:
                    - microservice-app
                    - gateway-app
                include:
                    - app-type: microservice-app
                      arg: 'no'
                    - app-type: gateway-app
                      arg: 'no'
        env:
            JHI_APP: ${{ matrix.app-type }}
            JHI_ARG: ${{ matrix.arg }}

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
            - uses: actions/setup-dotnet@v1
              with:
                dotnet-version: '5.0.100'
            - name: git history
              run: git --no-pager log -n 10 --graph --pretty='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue) <%an>%Creset' --abbrev-commit
            - name: PREPARE jhipster env
              run: sudo ./test-integration/scripts/00-install-all-jhipster.sh
            - name: 'GENERATE JHipster.NET app'
              run: ./test-integration/scripts/02-generate-app-sample.sh $JHI_APP
            - name: 'INSTALL AND BUILD DEPENDENCIES of generated app'
              run: ./test-integration/scripts/03-install-dependencies-app-sample.sh $JHI_APP
            - name: 'GENERATE JHipster.NET entities'
              run: ./test-integration/scripts/04-generate-entities-sample.sh $JHI_APP $JHI_ARG
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            - name: 'RUN SERVER UNIT TESTS of generated app'
              run: ./test-integration/scripts/06-run-generated-server-tests-of-sample.sh $JHI_APP
            - name: 'RUN SONAR ANALYZE on generated app'
              run: ./test-integration/scripts/08-run-sonar-analyze.sh $JHI_APP
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            - name: 'VERIFY FORMAT'
              run: ./test-integration/scripts/09-verify-format.sh $JHI_APP

