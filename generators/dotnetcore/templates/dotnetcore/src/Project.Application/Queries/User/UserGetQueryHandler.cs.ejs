<%#
 Copyright 2019-2023 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
using AutoMapper;
using System.Linq;
using <%= namespace %>.Domain.Entities;
using <%= namespace %>.Dto;
using MediatR;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Identity;
using Microsoft.EntityFrameworkCore;
<%_ if (databaseType === 'mongodb') { _%>
using MongoDB.Driver.Linq;
<%_ } _%>

namespace <%= namespace %>.Application.Queries;

public class UserGetQueryHandler : IRequestHandler<UserGetQuery, UserDto>
{
    private readonly UserManager<User> _userManager;
    private readonly IMapper _mapper;

    public UserGetQueryHandler(UserManager<User> userManager, IMapper mapper)
    {
        _userManager = userManager;
        _mapper = mapper;
    }

    public async Task<UserDto> Handle(UserGetQuery request, CancellationToken cancellationToken)
    {
        <%_ if (databaseType === 'mongodb') { _%>
        var result = await (_userManager.Users as IMongoQueryable<User>)
            .Where(user => user.Login == request.Login)
            .SingleOrDefaultAsync(cancellationToken);
        <%_ } else { _%>
        var result = await _userManager.Users
            .Where(user => user.Login == request.Login)
            .Include(it => it.UserRoles)
            .ThenInclude(r => r.Role)
            .SingleOrDefaultAsync();
        <%_ } _%>
        return _mapper.Map<UserDto>(result);
    }
}
