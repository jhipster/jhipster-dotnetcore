<%_ 
const hasManyToMany = entityClassHasManyToMany;
const entityTableName = snakeCasedEntityClass;
const entityClassName = pascalizedEntityClass;
const entityVariableName = camelCasedEntityClass;
const entityClassNamePluralized = pascalizedEntityClassPlural;
_%>
@page "/<%= lowerCasedEntityClass %>/new"
@page "/<%= lowerCasedEntityClass %>/{Id:int}/edit"
@using Microsoft.AspNetCore.Authorization
@namespace <%= namespace %>.Client.Pages.Entities.<%= entityClassName %>

@attribute [Authorize(Roles = "ROLE_USER")]

<div class="row justify-content-center">
    <div class="col-8">
        <EditForm Model="@<%= asModel(entityClassName) %>" OnValidSubmit="@Save">
            <h2 id="jhi-<%= lowerCasedEntityClass %>-heading">Create or edit a <%= entityClassName %></h2>
            <div>
                @*
                    TODO ADD ERROR
                    <jhi-alert-error></jhi-alert-error>
                *@

                @if (Id != 0)
                {
                    <div class="form-group">
                        <label for="id">ID</label>
                        <input type="text" class="form-control" id="id" name="id" readonly @bind-value="@<%= asModel(entityClassName) %>.Id" />
                    </div>
                }

                <%_ fields.forEach(field => {
                    if (field.id) return; _%>
                    <%_ if (field.fieldIsEnum) { _%>
                <Select class="form-control" name="<%= field.fieldName %>" formControlName="<%= field.fieldName %>" @bind-SelectedValue="@<%= asModel(entityClassName) %>.<%= field.fieldNamePascalized %>">
                    <%_ field.enumValues.forEach(enumValue => { _%>
                        <SelectItem TValue="string" value="<%= enumValue.value %>"><%= enumValue.value %></SelectItem>
                    <%_ }); _%>
                </Select>
                    <%_ } else { _%>
                <div class="form-group">
                    <label class="form-control-label" for="field_<%= field.fieldName %>"><%= field.fieldNameHumanized %></label>
                    <input type="text" class="form-control" name="<%= field.fieldName %>" id="field_<%= field.fieldName %>"
                            @bind-value="@<%= asModel(entityClassName) %>.<%= field.fieldNamePascalized %>" />
                </div>
                    <%_ }
                }); _%>

            <%_ relationships.forEach(relation => { 
                if (relation.relationshipType === 'one-to-one' || relation.relationshipType === 'many-to-one') { _%>
                <div class="form-group">
                    <label class="form-control-label" for="field_<%= relation.otherEntityNameLowerCased %>"><%= relation.relationshipFieldNamePascalizedPlural %></label>
                    <select class="form-control" id="field_<%= relation.otherEntityNameLowerCased %>" name="<%= relation.otherEntityNameLowerCased %>" @bind="@<%= relation.otherEntityNamePascalized %>Id">
                        <option value="0"></option>
                        @foreach (var <%= relation.otherEntityNameLowerCased %> in <%= relation.otherEntityNamePascalized %>Ids)
                        {
                            if (Id != 0 && <%= relation.otherEntityNameLowerCased %> == <%= asModel(entityClassName) %>?.<%= relation.relationshipFieldNamePascalized %>Id)
                            {
                                <option selected="selected">@<%= relation.otherEntityNameLowerCased %></option>
                            }
                            else
                            {
                                <option>@<%= relation.otherEntityNameLowerCased %></option>
                            }
                        }
                    </select>
                </div>
                <%_ } else if ((relation.relationshipType === 'many-to-many' || relation.relationshipType === 'one-to-many') && relation.ownerSide === true ) { _%>
                <div class="form-group">
                    <label class="form-control-label" for="field_<%= relation.otherEntityNameLowerCased %>"><%= relation.relationshipFieldNamePascalizedPlural %></label>
                    <Select  class="form-control" name="<%= relation.otherEntityNameLowerCased %>"  TValue="long" @bind-SelectedValues="Selected<%= relation.relationshipFieldNamePascalizedPlural %>" Multiple="true">
                        @foreach (var <%= relation.otherEntityNameLowerCased %> in <%= relation.otherEntityNamePascalized %>Ids)
                        {
                            <SelectItem TValue="long" Value="@<%= relation.otherEntityNameLowerCased %>">@<%= relation.otherEntityNameLowerCased %></SelectItem>
                        }
                    </Select>
                </div>
                <%_ }
            }); _%>
            </div>

            <div>
                <button type="button" id="cancel-save" class="btn btn-secondary" @onclick="Back">
                    <Icon Name='"fa-ban"' />&nbsp;<span>Cancel</span>
                </button>

                <button type="submit" id="save-entity" class="btn btn-primary">
                    <Icon Name='"fa-save"' />&nbsp;<span>Save</span>
                </button>
            </div>
        </EditForm>
    </div>
</div>
