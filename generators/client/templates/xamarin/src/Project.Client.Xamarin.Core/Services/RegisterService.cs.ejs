<%#
 Copyright 2013-2022 the original author or authors from the JHipster project.
 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

using System;
using System.Collections.Generic;
using System.Net;
using System.Net.Http;
using System.Net.Http.Json;
using System.Text;
using System.Threading.Tasks;
using <%= namespace %>.Client.Xamarin.Core.Models;
using MvvmCross.Logging;
using <%= namespace %>.Client.Xamarin.Shared.Constants;

namespace <%= namespace %>.Client.Xamarin.Core.Services;

public class RegisterService : IRegisterService
{
    private const string RegisterUrl = "/api/register";
    private readonly HttpClient _httpClient;
    private readonly IMvxLog _log;

    public RegisterService(HttpClient httpClient, IMvxLog log)
    {
        _httpClient = httpClient;
        _log = log;
    }

    public async Task<string> Save(UserSaveModel registerModel)
    {
        var resp = await _httpClient.PostAsJsonAsync(RegisterUrl, registerModel);
        if (resp.IsSuccessStatusCode)
            return null;
        return await ProcessError(resp);
    }

    private async Task<string> ProcessError(HttpResponseMessage result)
    {
        if (result.StatusCode != HttpStatusCode.BadRequest) return ErrorConst.UnknownErrorType;

        try
        {
            var res = await result.Content.ReadFromJsonAsync<RegisterResultRequest>();
            return res.Type;
        }
        catch (Exception ex)
        {
            _log.ErrorException("Failed to parse JSON from error", ex);
            return ErrorConst.UnknownErrorType;
        }
    }
}
