<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.
 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>

using System.Collections.Generic;
using System.Net.Http;
using System.Net.Http.Json;
using System.Threading.Tasks;
using <%= namespace %>.Client.Xamarin.Core.Models;

namespace <%= namespace %>.Client.Xamarin.Core.Services
{
    public class AbstractEntityService<T> : IAbstractEntityService<T> where T : class
    {
        private readonly HttpClient _httpClient;
        private readonly string _baseUrl;

        public AbstractEntityService(HttpClient httpClient, string baseUrl)
        {
            _httpClient = httpClient;
            _baseUrl = baseUrl;
        }

        public async Task<List<T>> GetEntities()
        {
            return await _httpClient.GetFromJsonAsync<List<T>>(_baseUrl);
        }

        public async Task<T> GetEntity(long id)
        {
            return await _httpClient.GetFromJsonAsync<T>($"{_baseUrl}/{id}");
        }

        public async Task CreateEntity(T entity)
        {
            await _httpClient.PostAsJsonAsync(_baseUrl, entity);
        }

        public async Task DeleteEntity(long id)
        {
            await _httpClient.DeleteAsync($"{_baseUrl}/{id}");
        }

        public async Task UpdateEntity(T entity)
        {
            await _httpClient.PutAsJsonAsync($"{_baseUrl}", entity);
        }
    }
}