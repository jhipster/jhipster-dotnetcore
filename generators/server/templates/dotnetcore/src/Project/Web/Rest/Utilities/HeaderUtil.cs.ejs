<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.
 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
using Microsoft.AspNetCore.Http;

namespace <%= namespace %>.Web.Rest.Utilities {
    public static class HeaderUtil {
        private static readonly string APPLICATION_NAME = "<%= frontendAppName %>";

        public static IHeaderDictionary CreateAlert(string message, string param)
        {
            IHeaderDictionary headers = new HeaderDictionary();
            headers.Add($"X-{APPLICATION_NAME}-alert", message);
            headers.Add($"X-{APPLICATION_NAME}-params", param);
            return headers;
        }

        public static IHeaderDictionary CreateEntityCreationAlert(string entityName, string param)
        {
            return CreateAlert($"{APPLICATION_NAME}.{entityName}.created", param);
        }

        public static IHeaderDictionary CreateEntityUpdateAlert(string entityName, string param)
        {
            return CreateAlert($"{APPLICATION_NAME}.{entityName}.updated", param);
        }

        public static IHeaderDictionary CreateEntityDeletionAlert(string entityName, string param)
        {
            return CreateAlert($"{APPLICATION_NAME}.{entityName}.deleted", param);
        }

        public static IHeaderDictionary CreateFailureAlert(string entityName, string errorKey, string defaultMessage)
        {
            //log.error("Entity processing failed, {}", defaultMessage);
            IHeaderDictionary headers = new HeaderDictionary();
            headers.Add($"X-{APPLICATION_NAME}-error", $"error.{errorKey}");
            headers.Add($"X-{APPLICATION_NAME}-params", entityName);
            return headers;
        }
    }
}
