<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.
 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
namespace JHipsterNet.Pagination {
    public static class PageableConstants {
        public static readonly IPageable UnPaged = new UnPaged();
    }

    public interface IPageable {
        bool IsPaged { get; }
        int PageNumber { get; }
        int PageSize { get; }
        int Offset { get; }
        Sort Sort { get; }
        IPageable Next { get; }
        IPageable PreviousOrFirst { get; }

        IPageable First { get; }

        bool HasPrevious { get; }
    }

    internal class UnPaged : IPageable {
        public bool IsPaged => false;
        public Sort Sort => Sort.Unsorted;
        public IPageable Next => this;
        public IPageable PreviousOrFirst => this;

        public IPageable First => this;

        public bool HasPrevious => false;

        public int PageNumber => -1;
        public int PageSize => -1;

        public int Offset => -1;
    }
}
