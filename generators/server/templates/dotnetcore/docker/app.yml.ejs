<%#
 Copyright 2019-2021 the original author or authors from the JHipster project.
 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
      http://www.apache.org/licenses/LICENSE-2.0
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
version: '2'
services:
<%_ switch(databaseType) {
    case 'mysql': _%>
    db:
        container_name: db
        image: mysql:8.0.19
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: jhipster
        ports:
            - "3308:3306"
        healthcheck:
            test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
            timeout: 20s
            retries: 10
    <%_ break;
    case 'mssql': _%>
    db:
        container_name: db
        image: mcr.microsoft.com/mssql/server
        environment:
            SA_PASSWORD: "Password!12"
            ACCEPT_EULA: "Y"
        healthcheck:
            test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$${SA_PASSWORD}" -Q "SELECT 1" -b -o /dev/null
            interval: 10s
            timeout: 3s
            retries: 10
            start_period: 10s
    <%_ break;
    case 'postgres': _%>
    db:
        container_name: db
        image: postgres:latest
        restart: always
        environment:
            POSTGRES_DB: jhipster
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432"
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5
    <%_ break;
} _%>
    <%= baseName.toLowerCase() %>-app:
        build:
            context: ../
            dockerfile: Dockerfile-Back
    <%_ if (databaseType !== 'sqllite' && databaseType !== 'oracle') { _%>
        depends_on:
            db:
               condition: service_healthy
    <%_ } _%>
        ports:
            - 8080:80
<%_ if (!skipClient && clientFramework === "Blazor") { _%>
    <%= baseName.toLowerCase() %>-front:
        build:
                context: ../
                dockerfile: Dockerfile-Front
                args:
                    - ServerUrl=http://localhost:8080
        ports:
            - 8081:80
<%_ } _%>

